services:

  # backend development service
  backend-dev:
    container_name: backend-dev
    build:
      context: backend
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./backend/.env.development
    ports:
      - 3000:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    # profiles:
    #   - backend-development

  # backend production service
  # backend:
  #   container_name: backend
  #   build:
  #     context: backend
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./backend/.env.production
  #   ports:
  #     - 8080:3000
  #   depends_on:
  #     - postgres
    
  frontend:
    build:
      context: frontend
      dockerfile: ./Dockerfile
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    # depends_on:
    #   - backend-dev

  # postgres service for database
  postgres:
    image: postgres:17.5-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-university-crm-platform-db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      # POSTGRES_HOST: ${DB_HOST:-localhost}
      # POSTGRES_PORT: ${DB_PORT:-5432}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data

  # pgAdmin for database management (Additions)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin


volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
